#####################################################################
#	Macros
#####################################################################

# [gcode_macro PRINT_START]
# #   Use PRINT_START for the slicer starting script - please customize for your slicer of choice
# gcode:
#     G28                            ; home all axes
#     G1 Z20 F3000                   ; move nozzle away from bed
#     CASE_WHITE

[gcode_macro PRINT_START]
default_parameter_BED: 110      #target bed temperature
default_parameter_EXTRUDER: 240 #target extruder temperature
gcode:
  SAVE_GCODE_STATE NAME=start

  M117 Starting warmup
  white
  G1 Z20 F3000                       ; move nozzle away from bed
  M117 Warmup
  M190 S{BED}                        ; set bed temp and wait for it reach temp
  M109 S{EXTRUDER|int}               ; M109 heat and wait for it to reach temp

  G1 Z5 F5000                        ; move head 5mm from bed surface
  M83                                ; Make the E relative independant of other axis
  G1 E9 F500 # unretract
  M117 Starting Print
  RESTORE_GCODE_STATE NAME=start
   
[gcode_macro PRINT_END]
#   Use PRINT_END for the slicer ending script - please customize for your slicer of choice
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F500                 ; retract filament
  G91                            ; relative positioning

  #   Get Boundaries
  {% set max_x = printer.configfile.config["stepper_x"]["position_max"]|float %}
  {% set max_y = printer.configfile.config["stepper_y"]["position_max"]|float %}
  {% set max_z = printer.configfile.config["stepper_z"]["position_max"]|float %}

  #   Check end position to determine safe direction to move
  {% if printer.toolhead.position.x < (max_x - 20) %}
      {% set x_safe = 20.0 %}
  {% else %}
      {% set x_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.y < (max_y - 20) %}
      {% set y_safe = 20.0 %}
  {% else %}
      {% set y_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.z < (max_z - 2) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}

  G0 Z{z_safe} F3600             ; move nozzle up
  G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107                           ; turn off fan
  G90                            ; absolute positioning
  G0 X60 Y{max_y} F3600          ; park nozzle at rear
  pruple
  M117 Print Complete

# [gcode_macro M600]
# gcode:
#     PAUSE
    
# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 110    # edit to your preferred park position
# default_parameter_Y: 110    # edit to your preferred park position
# default_parameter_Z: 10     # edit to your preferred park position
# default_parameter_E: 4      # edit to your preferred retract length
# gcode:
#     SAVE_GCODE_STATE NAME=PAUSE_state
#     BASE_PAUSE
#     G91
#     G1 E-{E} F2100
#     G1 Z{Z}
#     G90
#     G1 X{X} Y{Y} F6000
    
# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# default_parameter_E: 4      # edit to your preferred retract length
# gcode:
#     G91
#     G1 E{E} F2100
#     G90
#     RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#     BASE_RESUME

# [gcode_macro LOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E40 F300                    ; load
#    G1 E15 F150                    ; prime nozzle with filament
#    M82                            ; set extruder to absolute
    
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E10 F300                    ; extrude a little to soften tip
#    G1 E-70 F500                  ; retract some, but not too much or it will jam
#    M82                            ; set extruder to absolute

[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.0
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg

# Conditional G28
[gcode_macro CG28]
gcode:
  {% if printer.toolhead.homed_axes != "xyz" %}
    LOWERCURRENT
    G90
    G28
    RESETCURRENT
  {% endif %}

# [gcode_macro G32]
# gcode:
#   G90
#   G28
#   QUAD_GANTRY_LEVEL
#   G28
#   BED_MESH_PROFILE LOAD=default
#   clean_nozzle
#   CALIBRATE_Z

# [gcode_macro PRINT_START]
# gcode:
 
#   green
#   M117 Homing...
#   G28
#   M117 Heating Bed...
# #  Nevermore_on
#   red
#   M140 S{ params.BED}                         ; set bed final temp
#   M190 S{ params.BED}                         ; wait for bed final temp
#   {% if  params.BED|int > 70 %}               ; Heat soak for ABS
#   {% if "z" not in printer.toolhead.homed_axes %}
#   # G28                         ;Only G28 Home if needed
#   {% endif %}
#   G0 X150 Y150 Z30                                   ; move toolhead to centre
#   M117 Heat Soak: 42~degrees~
#   orange
#   TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM=42 
#   M117 Soak Complete!
#   {% else %}
#   M117 Heat Soak not required
#   #SET_HEATER_TEMPERATURE HEATER=extruder TARGET={EXTRUDER}
#   {% endif %}
#   green
#   yellow
#   M117 Heating Extruder...
#   M109 S{params.EXTRUDER}                ; wait for extruder final temp
#   led_on
#   M117 Parking... 
#   Park_Toolhead
#   M117 Cleaning...
#   CLEAN_NOZZLE
#   Attach_Probe_Lock
#   M117 Quad Gantry Level
#   #TODO: add If Leveled function soon
#   QUAD_GANTRY_LEVEL
#   Dock_probe_unlock
#   M117 Cleaning...
#   CLEAN_NOZZLE
#   Attach_probe_lock
#   Green
#   M117 Calibrating Z...
#   CALIBRATE_Z
#   RESET_EXTRUDER        
#   Dock_Probe_Unlock
#   CLEAN_NOZZLE
#   #COUNTER_ON
#   blue
#   ERCF_HOME
#   M117 Printing...

[gcode_macro RESET_EXTRUDER]
gcode:
  G92 E0 ; reset extruder

# [gcode_macro PRINT_END]
# gcode:
#     SONG_SMB_FLAGPOLE
#     #COUNTER_OFF
#     M400                           ; wait for buffer to clear
#     G92 E0                         ; zero the extruder
#     G1 E-10.0 F3600                ; retract filament
#     G91                            ; relative positioning
#     G0 Z1.00 X20.0 Y20.0 F20000    ; move nozzle to remove stringing
#     TURN_OFF_HEATERS
#     M107                           ; turn off fan
#     G1 Z2 F3000                    ; move nozzle up 2mm
#     G90                            ; absolute positioning
#     G0 X125 Y250 F3600             ; park nozzle at rear
#     BED_MESH_CLEAR
#     M84
#     # Nevermore_off
#     M117

[gcode_macro LED_ON]
gcode: 
  white

# [gcode_macro PURGE_LINE]
# #   A purge line on the left of the bed to prime the extruder
# gcode:
#   G92 E0                         ; zero/reset extruder
#   G1 X2.2 Y20 Z0.3 F18000        ; move to start position
#   G1 E+15 F150              ;    extrude to put the pressure (-20 from purge macro)
#   G92 E0

#   G1 X2.2 Y200 Z0.25 F1500 E10    ; extrude the first line
#   G1 X2.5 Y200 Z0.3 F18000       ; move to side a little
#   G1 X2.5 Y20 Z0.25 F1500.0 E20   ; extrude the second line
#   G92 E0                         ; zero/reset extruder
#   G1 Z2.0 E-0.1 F3000              ; move nozzle up and retract tiny bit
#   G92 E0 

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 230    #edit to your park position
# default_parameter_Y: 230    #edit to your park position
# default_parameter_Z: 10     #edit to your park position
# default_parameter_E: 1      #edit to your retract length
# gcode:
#   SAVE_GCODE_STATE NAME=PAUSE_state
#   BASE_PAUSE
#   G91
#   {% if printer.extruder.temperature > 180 %}
#     G1 E-{E} F2100
#   {% endif %} 
#   G1 Z{Z}
#   G90
#   G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 1      #edit to your retract length
gcode:
  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME
 
# Park bed for heatsoaking
[gcode_macro PARK]
default_parameter_FORCE: 0
gcode:
  {% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARK
    G90                            ; absolute positioning
    G0 X60 Y60 Z30 F5000        ; Move to position
    RESTORE_GCODE_STATE NAME=PARK
  {% else %}
    { action_respond_info("PARK disabled while printing!") }
  {% endif %}

# Park front for maintenance / cleaning
[gcode_macro PARKFRONT]
gcode:
  {% if printer.idle_timeout.state != "Printing" %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARKFRONT
    G90                            ; absolute coords
    G1 Z100 X60 Y0 F5000         ; Move to position
    RESTORE_GCODE_STATE NAME=PARKFRONT
  {% else %}
    { action_respond_info("PARKFRONT disabled while printing!") }
  {% endif %}

# Park Toolhead Routine
[gcode_macro Park_Toolhead]
gcode:
   G1 X150 Y150 F18000

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
# change this if you need more or less extrusion
variable_extrude: 1.0
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro CENTER_ALL]
gcode:
  G90
  G1 X150 Y0 Z100 F30000

[gcode_macro UNLOAD_FILAMENT_ABS]
gcode:
    SAVE_GCODE_STATE NAME=UNLOADFILAMENT
    M109 S225                             ; wait for extruder to cool down to prevent blob
    M83                                   ; set extruder to relative
    #G1 E2 F300                            ; (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
    G1 E-50 F300                        ; retract filament completely
    G1 E-50 F1000                        ; retract filament completely
    RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
    SAVE_GCODE_STATE NAME=LOADFILAMENT
    M83 ; set extruder to relative
    G1 E45 F300                           ; quickly load filament to down filament path
    G1 E40 F300                           ; slower extrusion for hotend path / prime
    RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro PREHEAT_ABS]
gcode:
    SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
variable_paused: True
default_parameter_X: 125
default_parameter_Y: 125
default_parameter_Z: 10
gcode:
    SAVE_GCODE_STATE NAME=M600_state
    BASE_PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=x VALUE={printer.gcode_move.gcode_position.x} 
    SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=y VALUE={printer.gcode_move.gcode_position.y} 
    SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=z VALUE={printer.gcode_move.gcode_position.z} 
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-67 F1000
    SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=True 
    RESTORE_GCODE_STATE NAME=M600_state  

[gcode_macro RESUME_M600]
variable_x: 125 
variable_y: 125 
variable_z: 125 
gcode:
    SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=False
    SAVE_GCODE_STATE NAME=RESUME_M600_state
    G90
    G1 X75 Y253 F6000
    G91
    G1 E67 F1000
    PURGE_N_BRUSH EXTRUDER={printer.extruder.target} PURGE=100
    G90
    G1 Z{z}
    G1 X{x} Y{y} F6000
    RESTORE_GCODE_STATE NAME=RESUME_M600_state  
    BASE_RESUME



[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
    TURN_OFF_HEATERS
    CLEAR_PAUSE
    SDCARD_RESET_FILE
    PRINT_END
    BASE_CANCEL_PRINT


[gcode_macro ZUP]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=0.01 MOVE=1

[gcode_macro ZDOWN]
gcode:
    SET_GCODE_OFFSET Z_ADJUST=-0.01 MOVE=1


# For example SPEEDTEST I=10
# Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
[gcode_macro SPEEDTEST]
gcode:
    #Parameters
    {% set i = params.I|default(1)|int %}
    
    SAVE_GCODE_STATE NAME=SPEEDTEST
    G28 X Y
    GET_POSITION
    G90                              ; absolute positioning
    {% for iteration in range(i|int) %}
        G1 X0 Y0     F27000
        G1 X120 Y120 F27000
        G1 X0 Y0     F27000
        G1 X120 X120 F27000

        G1 X0 X120 F36000

        G1 X120 Y0 F27000
        G1 X0 X120 F27000
        G1 X120 Y0 F27000
        G1 X0 X120 F27000

        G1 X0 Y0 F36000
        G1 X120 Y0 F36000
        G1 X120 X120 F36000
        G1 X0 X120 F36000
        G1 X0 Y0 F36000
    {% endfor %}
    G28 X Y
    GET_POSITION
    RESTORE_GCODE_STATE NAME=SPEEDTEST
