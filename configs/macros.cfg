#####################################################################
#	Macros
#####################################################################

[gcode_shell_command pushover_print_complete]
command: /home/pi/klipper_config/pushover.sh -t "BabbyPronter" Print Complete
timeout: 30.0
verbose: True

[gcode_macro PUSHOVER_PRINT_COMPLETE]
gcode:
  RUN_SHELL_COMMAND CMD=pushover_print_complete

[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.0
verbose: True

[gcode_shell_command backup_cfg]
command: sh /home/pi/klipper_config/autocommit.sh
timeout: 30.0
verbose: True

[gcode_macro BACKUP_CFG]
gcode:
  RUN_SHELL_COMMAND CMD=backup_cfg

[gcode_macro PRINT_START]
gcode:
  {% set bed = params.BED|default(110)|int %}
  {% set extruder = params.EXTRUDER|default(250)|int %}
  SAVE_GCODE_STATE NAME=start

  M117 Starting warmup
  white
  G1 Z20 F3000                       ; move nozzle away from bed
  
  M117 Heating ~bed~ {bed}~degrees~
  M190 S{bed}                     
  M117 Heating ~extruder~ {extruder}~degrees~                             # set bed temp and wait for it reach temp
  M109 S{extruder}                                                        # M109 heat and wait for it to reach temp

  G1 Z5 F5000                        ; move head 5mm from bed surface
  M83                                ; Make the E relative independant of other axis
  G1 E9 F500 # unretract
  M117 Printing
  RESTORE_GCODE_STATE NAME=start
   
[gcode_macro PRINT_END]
default_parameter_STANDBY: 0     
gcode:
  M400                           ; wait for buffer to clear
  G92 E0                         ; zero the extruder
  G1 E-10.0 F500                 ; retract filament
  G91                            ; relative positioning

  #   Get Boundaries
  {% set max_x = printer.toolhead.axis_maximum.x|float %}
  {% set max_y = printer.toolhead.axis_maximum.y|float %}
  {% set max_z = printer.toolhead.axis_maximum.z|float %}

  #   Check end position to determine safe direction to move
  {% if printer.toolhead.position.x < (max_x - 20) %}
      {% set x_safe = 20.0 %}
  {% else %}
      {% set x_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.y < (max_y - 20) %}
      {% set y_safe = 20.0 %}
  {% else %}
      {% set y_safe = -20.0 %}
  {% endif %}

  {% if printer.toolhead.position.z < (max_z - 2) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - printer.toolhead.position.z %}
  {% endif %}

  G0 Z{z_safe} F3600             ; move nozzle up
  G0 X{x_safe} Y{y_safe} F20000  ; move nozzle to remove stringing
  {% if STANDBY > 0 %}
    M190 S{printer.heater_bed.target|float * 0.75}                     
    M109 S{printer.extruder.target|float * 0.50}
  {% else %}
    TURN_OFF_HEATERS
  {% endif %}
  # TURN_OFF_HEATERS
  M107                           ; turn off fan
  G90                            ; absolute positioning
  G0 X60 Y{max_y} F3600          ; park nozzle at rear
  purple
  M117 Print Complete
  PUSHOVER_PRINT_COMPLETE

# [gcode_macro M600]
# gcode:
#     PAUSE
    
# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 110    # edit to your preferred park position
# default_parameter_Y: 110    # edit to your preferred park position
# default_parameter_Z: 10     # edit to your preferred park position
# default_parameter_E: 4      # edit to your preferred retract length
# gcode:
#     SAVE_GCODE_STATE NAME=PAUSE_state
#     BASE_PAUSE
#     G91
#     G1 E-{E} F2100
#     G1 Z{Z}
#     G90
#     G1 X{X} Y{Y} F6000
    
# [gcode_macro RESUME]
# rename_existing: BASE_RESUME
# default_parameter_E: 4      # edit to your preferred retract length
# gcode:
#     G91
#     G1 E{E} F2100
#     G90
#     RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
#     BASE_RESUME

# [gcode_macro LOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E40 F300                    ; load
#    G1 E15 F150                    ; prime nozzle with filament
#    M82                            ; set extruder to absolute
    
# [gcode_macro UNLOAD_FILAMENT]
# gcode:
#    M83                            ; set extruder to relative
#    G1 E10 F300                    ; extrude a little to soften tip
#    G1 E-70 F500                  ; retract some, but not too much or it will jam
#    M82                            ; set extruder to absolute


[gcode_macro RESET_EXTRUDER]
gcode:
  G92 E0 ; reset extruder

[gcode_macro LED_ON]
gcode: 
  white

[gcode_macro PREHEAT_CHAMBER]
gcode:
  #Parameters
  {% set bed = params.BED|default(113)|int %}
  {% set extruder = params.EXTRUDER|default(150)|int %}
  {% set chamber = params.CHAMBER|default(0)|int %}
  {% set soak = params.SOAK|default(0)|int %}

  orange
  M117 Preheat Start
  G0 Z20 F600                                                             # Move nozzle to a safe travel height
  G0 X60 Y60 Z20 F12000                                                 # Go to center of 300 x 300 bed
  M106 S255                                                               # Turn on Part Cooling Fans to 100%
  M117 Heating ~bed~ {bed}~degrees~
  M190 S{bed}                     
  M117 Heating ~extruder~ {extruder}~degrees~                             # set bed temp and wait for it reach temp
  M109 S{extruder}                                                        # M109 heat and wait for it to reach temp

  {% if soak > 0 and (printer.heater_bed.target <= (bed - 20)) %}
    {% for timer in range(soak|int,0,-1) %}
      M117 Soaking ~bed~ {timer|int}m                                     # let the bed soak a bit more
      M105
      G4 P60000
    {% endfor %}
  {% endif %}

  {% if chamber > 0 and printer['temperature_sensor chamber'].temperature < chamber %}
    M117 Soaking ~chamber~ {chamber}~degrees~
    TEMPERATURE_WAIT SENSOR="temperature_sensor chamber" MINIMUM={chamber}  # make sure we hit chamber temp
  {% endif %}

  pruple
  M117 Preheat Done
  G4 P5000

# [gcode_macro PAUSE]
# rename_existing: BASE_PAUSE
# default_parameter_X: 60    #edit to your park position
# default_parameter_Y: 60    #edit to your park position
# default_parameter_Z: 10     #edit to your park position
# default_parameter_E: 1      #edit to your retract length
# gcode:
#   SAVE_GCODE_STATE NAME=PAUSE_state
#   BASE_PAUSE
#   G91
#   {% if printer.extruder.temperature > 180 %}
#     G1 E-{E} F2100
#   {% endif %} 
#   G1 Z{Z}
#   G90
#   G1 X{X} Y{Y} F6000

[gcode_macro RESUME]
rename_existing: BASE_RESUME
default_parameter_E: 2      #edit to your retract length
gcode:
  G91
  G1 E{E} F2100
  G90
  RESTORE_GCODE_STATE NAME=PAUSE_state MOVE=1
  BASE_RESUME
 
# Park bed for heatsoaking
[gcode_macro PARK]
default_parameter_FORCE: 0
gcode:
  {% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
    CG28                           ; Home if not already homed
    SAVE_GCODE_STATE NAME=PARK
    G90                            ; absolute positioning
    G0 X60 Y60 Z30 F5000        ; Move to position
    RESTORE_GCODE_STATE NAME=PARK
  {% else %}
    { action_respond_info("PARK disabled while printing!") }
  {% endif %}

# Park front for maintenance / cleaning
[gcode_macro PARK_FRONT]
default_parameter_FORCE: 0
gcode:
  {% set x_park = printer.toolhead.axis_maximum.x|float * 0.50 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float * 0.50 %}
  {% set z_park = printer.toolhead.axis_maximum.z|float * 0.50 %}

  {% if printer.idle_timeout.state != "Printing" or FORCE|int == 1 %}
    CG28                                            ; Home if not already homed
    G90                                             ; absolute coords
    G1 X{x_park} Y{y_park} Z{z_park} F5000          ; Move to position
  {% else %}
    { action_respond_info("PARKFRONT disabled while printing!") }
  {% endif %}

# Park Toolhead Routine
[gcode_macro Park_Toolhead]
gcode:
   G1 X60 Y60 F18000

[gcode_macro PAUSE]
rename_existing: BASE_PAUSE
default_parameter_E: 2      #edit to your retract length
variable_extrude: 1.0 # change this if you need more or less extrusion
gcode:
  ##### set park positon for x and y #####
  # default is your max posion from your printer.cfg
  {% set x_park = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_park = printer.toolhead.axis_maximum.y|float - 5.0 %}
  ##### calculate save lift position #####
  {% set max_z = printer.toolhead.axis_maximum.z|float %}
  {% set act_z = printer.toolhead.position.z|float %}
  {% if act_z < (max_z - 2.0) %}
      {% set z_safe = 2.0 %}
  {% else %}
      {% set z_safe = max_z - act_z %}
  {% endif %}
  ##### end of definitions #####
  SAVE_GCODE_STATE NAME=PAUSE_state
  BASE_PAUSE
  G91
  G1 E-{E} F2100
  G1 Z{z_safe} F900
  G90
  G1 X{x_park} Y{y_park} F6000

[gcode_macro CENTER_ALL]
gcode:
  G90
  G1 X60 Y0 Z100 F30000

[gcode_macro UNLOAD_FILAMENT_ABS]
gcode:
  SAVE_GCODE_STATE NAME=UNLOADFILAMENT
  M109 S225                             ; wait for extruder to cool down to prevent blob
  M83                                   ; set extruder to relative
  #G1 E2 F300                            ; (CAUSING CLOGS AT 10mm?) extrude a little to soften tip 
  G1 E-50 F300                        ; retract filament completely
  G1 E-50 F1000                        ; retract filament completely
  RESTORE_GCODE_STATE NAME=UNLOADFILAMENT

[gcode_macro LOAD_FILAMENT]
gcode:
  SAVE_GCODE_STATE NAME=LOADFILAMENT
  M83 ; set extruder to relative
  G1 E45 F300                           ; quickly load filament to down filament path
  G1 E40 F300                           ; slower extrusion for hotend path / prime
  RESTORE_GCODE_STATE NAME=LOADFILAMENT

[gcode_macro PREHEAT_ABS]
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=240
  SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=110

######################################################################
# Filament Change
######################################################################

# M600: Filament Change. This macro will pause the printer, move the
# tool to the change position, and retract the filament 50mm. Adjust
# the retraction settings for your own extruder. After filament has
# been changed, the print can be resumed from its previous position
# with the "RESUME" gcode.

[gcode_macro M600]
variable_paused: True
default_parameter_X: 120
default_parameter_Y: 120
default_parameter_Z: 10
gcode:
  SAVE_GCODE_STATE NAME=M600_state
  BASE_PAUSE
  G91
  G1 E-.8 F2700
  G1 Z{Z}
  SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=x VALUE={printer.gcode_move.gcode_position.x} 
  SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=y VALUE={printer.gcode_move.gcode_position.y} 
  SET_GCODE_VARIABLE MACRO=RESUME_M600 VARIABLE=z VALUE={printer.gcode_move.gcode_position.z} 
  G90
  G1 X{X} Y{Y} F3000
  G91
  G1 E-67 F1000
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=True 
  RESTORE_GCODE_STATE NAME=M600_state  

[gcode_macro RESUME_M600]
variable_x: 125 
variable_y: 125 
variable_z: 125 
gcode:
  SET_GCODE_VARIABLE MACRO=M600 VARIABLE=paused VALUE=False
  SAVE_GCODE_STATE NAME=RESUME_M600_state
  G90
  G1 X75 Y253 F6000
  G91
  G1 E67 F1000
  PURGE_N_BRUSH EXTRUDER={printer.extruder.target} PURGE=100
  G90
  G1 Z{z}
  G1 X{x} Y{y} F6000
  RESTORE_GCODE_STATE NAME=RESUME_M600_state  
  BASE_RESUME

[gcode_macro RESUME]
rename_existing: BASE_RESUME
gcode:
  ##### read E from pause macro #####
  {% set E = printer["gcode_macro PAUSE"].extrude|float %}
  ##### end of definitions #####
  G91
  G1 E{E} F2100
  RESTORE_GCODE_STATE NAME=PAUSE_state
  BASE_RESUME

[gcode_macro CANCEL_PRINT]
rename_existing: BASE_CANCEL_PRINT
gcode:
  TURN_OFF_HEATERS
  CLEAR_PAUSE
  SDCARD_RESET_FILE
  PRINT_END
  BASE_CANCEL_PRINT

# Dump all Klipper parameters to terminal, helps find names and values of variables for use in macros
[gcode_macro DUMP_PARAMETERS]
gcode:
  {% set parameters = namespace(output = '') %}
  {% for name1 in printer %}
    {% for name2 in printer[name1] %}
      {% set donotwant = ['bed_mesh','configfile'] %}
      {% if name1 is not in donotwant %}
        {% set param = "printer['%s'].%s = %s" % (name1, name2, printer[name1][name2]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
      {% endif %}
      {% else %}
        {% set param = "printer['%s'] = %s" % (name1, printer[name1]) %}
        {% set parameters.output = parameters.output +  param + "\n" %}
    {% endfor %}
  {% endfor %}
  {action_respond_info(parameters.output)}

# Compare the GET_POSITION output before and after, see if you skipped steps. IIRC you want the "mcu" line to show within 16 before and after (a full step)
[gcode_macro SPEEDTEST]
gcode:
  #Parameters
  {% set i = params.I|default(1)|int %}
  {% set da = params.DIAGONAL_ACCEL|default(27000)|int %}
  {% set la = params.LINEAR_ACCEL|default(36000)|int %}
  {% set x_max = printer.toolhead.axis_maximum.x|float - 5.0 %}
  {% set y_max = printer.toolhead.axis_maximum.y|float - 5.0 %}
  
  SAVE_GCODE_STATE NAME=SPEEDTEST
  G28 X Y
  GET_POSITION
  G90
  {% for iteration in range(i|int) %}
    G1 X0 Y0     F{da}
    G1 X{x_max} Y{y_max} F{da}
    G1 X0 Y0     F{da}
    G1 X{x_max} Y{y_max} F{da}

    G1 X0 Y{y_max} F{la}

    G1 X{x_max} Y0 F{da}
    G1 X0 Y{y_max} F{da}
    G1 X{x_max} Y0 F{da}
    G1 X0 Y{y_max} F{da}

    G1 X0 Y0 F{la}
    G1 X{x_max} Y0 F{la}
    G1 X{x_max} Y{y_max} F{la}
    G1 X0 Y{y_max} F{la}
    G1 X0 Y0 F{la}
  {% endfor %}
  G28 X Y
  GET_POSITION
  RESTORE_GCODE_STATE NAME=SPEEDTEST
