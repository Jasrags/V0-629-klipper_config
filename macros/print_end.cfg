[gcode_macro PRINT_END]
gcode:
  {% set retract_end = printer['gcode_macro _USER_VARIABLE'].retract_end %}
  {% set can_extrude = printer.extruder.can_extrude|lower %}

  ##### Get needed max/min/delta #####
  {% set min_x = printer.toolhead.axis_minimum.x|float %}
  {% set max_y = printer.toolhead.axis_maximum.y|float %}
  ##### Get user defines #####
  {% set boarder_delta = printer['gcode_macro _USER_VARIABLE'].boarder_delta|float %}
  ##### calc park pos #####
  {% set park_x = min_x + boarder_delta %}
  {% set park_y = max_y - boarder_delta %}

  {% if printer['gcode_macro _USER_VARIABLE'].debug == 1 %}
    {action_respond_info('==== PRINT_END ====')}
    {action_respond_info("retract_end: %s" % (retract_end))}
    {action_respond_info("can_extrude: %s" % (can_extrude))}
    {action_respond_info("min_x: %s" % (min_x))}
    {action_respond_info("max_y: %s" % (max_y))}
    {action_respond_info("boarder_delta: %s" % (boarder_delta))}
    {action_respond_info("park_x: %s" % (park_x))}
    {action_respond_info("park_y: %s" % (park_y))}
    {action_respond_info('===============')}
  {% endif %}

  M400  # wait for buffer to clear
  {% if can_extrude == 'true' %}
    G92 E0  # zero the extruder
    G1 E-{retract_end} F3600  # retract filament
  {% endif %}
  G91 # relative positioning
  G0 Z1.00 X20.0 Y20.0 F20000 # move nozzle to remove stringing
  TURN_OFF_HEATERS
  M107  # turn off fan
  G1 Z2 F3000 # move nozzle up 2mm
  G90 # absolute positioning
  G0 X{park_x} Y{park_y} F18000 # park nozzle at rear 
  BED_MESH_CLEAR
  M84
  _CIRCULATION_END
  
  red
  M117 Clean Nozzle!
  PUSHOVER_PRINT_COMPLETE
  # SONG_SMB_FLAGPOLE
